import sys
import zlib
import string

def caesarenc(k, content):

    # Inicializar variable para almacenar el resultado del cifrado
    result = ''

    # Recorrer cada carácter del contenido del archivo
    for c in content:
        # Aplicar el desplazamiento de k
        if c in string.ascii_lowercase:
            result += chr((ord(c) - ord('a') + k) % 26 + ord('a'))
        elif c in string.ascii_uppercase:
            result += chr((ord(c) - ord('A') + k) % 26 + ord('A'))
        else:
            result += c
    return result

def combinaenc(input_file, output_file):
    # Abrir archivo de entrada en modo lectura
    with open(input_file, 'r') as f:
        # Leer contenido del archivo
        content = f.read()

    # Aplicar cifrado de Caesar al contenido del archivo
    encrypted = caesarenc(3, content)

    # Comprimir el contenido cifrado
    encrypted_bytes = bytes(encrypted, 'utf-8')
    compressed = zlib.compress(encrypted_bytes)

    # Abrir archivo de salida en modo escritura
    with open(output_file, 'wb') as f:
        # Escribir el resultado de la compresión en el archivo
        f.write(compressed)

# Verificar que se han proporcionado los argumentos necesarios
if len(sys.argv) != 4:
    print('Uso: combinaenc fichentrada -o fichsalida')
    sys.exit(1)

# Obtener nombres de archivos de entrada y salida
input_file = sys.argv[1]
output_file = sys.argv[3]

# Ejecutar la función de combinación de cifrado de Caesar y compresión
combinaenc(input_file, output_file)