import sys
import string
import operator
import spellchecker

def count_existing_words(decrypted):
    
    #Dividir el input
    words = decrypted.split()

    # Crear objeto SpellChecker
    spell_checker = spellchecker.SpellChecker()
    
    return len(spell_checker.known(words))

def caesardec(k, content):
    
    # Inicializar variable para almacenar el resultado del descifrado
    result = ''

    # Recorrer cada carácter del contenido del archivo
    for c in content:
        # Aplicar el desplazamiento de -k
        if c in string.ascii_lowercase:
            result += chr((ord(c) - ord('a') - k) % 26 + ord('a'))
        elif c in string.ascii_uppercase:
            result += chr((ord(c) - ord('A') - k) % 26 + ord('A'))
        else:
            result += c
    return result

def fuerzabrutacaesarautomatico(input_file):
    # Abrir archivo de entrada en modo lectura
    with open(input_file, 'r') as f:
        # Leer contenido del archivo
        content = f.read()

    combinationsDict = {}

    # Recorrer todos los valores posibles de k
    for k in range(26):
        # Aplicar descifrado de Caesar al contenido del archivo
        decrypted = caesardec(k, content)
        correct_words = count_existing_words(decrypted)
        combinationsDict[k]=correct_words

    return list(dict(sorted(combinationsDict.items(), key=operator.itemgetter(1),reverse=True)).keys())[0]

        

# Verificar que se ha proporcionado el argumento necesario
if len(sys.argv) != 2:
    print('Uso: fuerzabrutacaesarautomatico entrada.enc')
    sys.exit(1)

# Obtener nombre del archivo de entrada
input_file = sys.argv[1]

# Ejecutar la función de ataque de fuerza bruta al cifrado de Caesar
k = fuerzabrutacaesarautomatico(input_file)

with open(input_file, 'r') as f:
    # Leer contenido del archivo
    content = f.read()

decrypted = caesardec(k, content)

# Mostrar resultado del descifrado en pantalla
print(f'k = {k}: {decrypted}')