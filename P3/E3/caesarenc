import argparse

def checkCommandLineArguments():
    parser = argparse.ArgumentParser(description='Encripts with caesar algorithm a given file')
    
    parser.add_argument("key", type=int, metavar='KEY', help="The key to cypher",)
    parser.add_argument("input", type=str, metavar='INFILE', help="The file to cypher",)
    parser.add_argument('-o', dest = "output", type=str, metavar='OUTFILE',help='Specify output file')
    args = parser.parse_args()
    
    if len(vars(args)) < 3:
        print("Error, missing arguments.")
        print("Call the program by this way: python3 caesarenc k entrada.txt -o salida.enc")
        exit()
    if (args.key == None) or (args.input == None) or (args.output == None):
        print("Error, bad arguments.")
        print("Call the program by this way: python3 caesarenc k entrada.txt -o salida.enc")
        exit()
    return args.key, args.input, args.output

def openFile(path):
    try:
        f = open(path, "r")
        return f
            
    except:
        print('Error, file could not be opened check if file exists.')

def readFile(file):
    try:
        text = file.read() 
        return text
            
    except:
        print('Error, file could not be readed check if file exists.')

def cipherText(text, k):

    cipheredText = ""
    text = text.upper()

    for i in range(len(text)):

        char = text[i]

        if not char.isspace():
            cipheredText += chr((ord(char) + k-65) % 26 + 65)
        else:
            cipheredText += " "

    return cipheredText

def saveCipheredText(cipheredText, path):
    try:
        f = open(path, "w")
        f.write(cipheredText)
    except:
        print('Error, file could not be saved check path.')

if __name__ == "__main__":
    
    k,input, output = checkCommandLineArguments()
    
    file = openFile(input)
    text = readFile(file)

    cipheredText = cipherText(text, k)
    
    saveCipheredText(cipheredText, output)
